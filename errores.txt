C:\Users\alexi\Desktop\ModelosIA\PrediccionCancerCiffNet>python quick_fine_tune.py
🚀 INICIANDO FINE-TUNING RÁPIDO DE CIFFNET
============================================================
🎯 Usando device: cuda
🔧 FASE 1 - Feature Extraction inicializando...
   Backbone: efficientnet_b1
   Pretrained: True
INFO:timm.models._builder:Loading pretrained weights from Hugging Face hub (timm/efficientnet_b1.ra4_e3600_r240_in1k)
INFO:timm.models._hub:[timm/efficientnet_b1.ra4_e3600_r240_in1k] Safe alternative available for 'pytorch_model.bin' (as 'model.safetensors'). Loading weights using safetensors.
WARNING:timm.models._builder:Unexpected keys (bn2.bias, bn2.num_batches_tracked, bn2.running_mean, bn2.running_var, bn2.weight, classifier.bias, classifier.weight, conv_head.weight) found while loading pretrained weights. This may be expected if model is being adapted.
   Dimensiones detectadas: [24, 40, 112, 320]
   ⚡ Optimizaciones RTX 3070 aplicadas
✅ FASE 1 creada:
   Feature dims: [24, 40, 112, 320]
   Total params: 6,886,176
   Output dim: 256 (listo para Fase 2)
🔧 FASE 2 COMPLETA - Cliff Detection según paper...
✅ FASE 2 COMPLETA inicializada:
   📊 CFM: Gradient + Magnitude + Boundary + Uncertainty
   🎯 CRI: Spatial + Feature + Multi-scale + Confidence
   🧠 CAFE: Attention + Re-weight + Boundary + Fusion
   🔧 Total params: 1,519,310
🔧 Creando Phase 3 Complete Classifier...
✅ CliffAwareClassifier creado:
   Input dim: 256
   Num classes: 7
   Cliff threshold: 0.15
✅ CiffNetPhase3CompleteClassifier creado:
   Input dim: 256
   Num classes: 7
   Cliff threshold: 0.15
✅ Phase 3 Complete creada:
   Parámetros totales: 233,359
✅ Pesos cargados:
   Compatible: 639/639 pesos
   Incompatible: 0 pesos
🎯 Estrategia de entrenamiento:
   Parámetros congelados: 6,101,024
   Parámetros entrenables: 2,537,821
   Ratio entrenamiento: 29.4%
📊 Dataset cargado: 0 imágenes
Traceback (most recent call last):
  File "C:\Users\alexi\Desktop\ModelosIA\PrediccionCancerCiffNet\quick_fine_tune.py", line 402, in <module>      
    model = run_quick_fine_tune(
        model_path="results/models/ciffnet_epoch_100.pth",
    ...<3 lines>...
        learning_rate=5e-6  # LR muy conservador
    )
  File "C:\Users\alexi\Desktop\ModelosIA\PrediccionCancerCiffNet\quick_fine_tune.py", line 382, in run_quick_fine_tune
    train_loader, val_loader = fine_tuner.create_data_loaders(
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        train_data_dir, val_data_dir, batch_size
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\alexi\Desktop\ModelosIA\PrediccionCancerCiffNet\quick_fine_tune.py", line 176, in create_data_loaders
    train_loader = DataLoader(
        train_dataset,
    ...<3 lines>...
        pin_memory=True if torch.cuda.is_available() else False
    )
  File "C:\Users\alexi\AppData\Local\Programs\Python\Python313\Lib\site-packages\torch\utils\data\dataloader.py", line 385, in __init__
    sampler = RandomSampler(dataset, generator=generator)  # type: ignore[arg-type]
  File "C:\Users\alexi\AppData\Local\Programs\Python\Python313\Lib\site-packages\torch\utils\data\sampler.py", line 156, in __init__
    raise ValueError(
        f"num_samples should be a positive integer value, but got num_samples={self.num_samples}"
    )
ValueError: num_samples should be a positive integer value, but got num_samples=0

C:\Users\alexi\Desktop\ModelosIA\PrediccionCancerCiffNet>